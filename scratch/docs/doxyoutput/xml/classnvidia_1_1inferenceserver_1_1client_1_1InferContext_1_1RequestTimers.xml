<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classnvidia_1_1inferenceserver_1_1client_1_1InferContext_1_1RequestTimers" kind="class" language="C++" prot="public">
    <compoundname>nvidia::inferenceserver::client::InferContext::RequestTimers</compoundname>
    <includes refid="request_8h" local="no">request.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="classnvidia_1_1inferenceserver_1_1client_1_1InferContext_1_1RequestTimers_1ad3d72a1b49c1e9ebb2bbeb15e04401f8" prot="public" static="no">
        <name>Kind</name>
        <enumvalue id="classnvidia_1_1inferenceserver_1_1client_1_1InferContext_1_1RequestTimers_1ad3d72a1b49c1e9ebb2bbeb15e04401f8a2ca0e66d9f91476f9f00f61c5a834cbb" prot="public">
          <name>REQUEST_START</name>
          <briefdescription>
<para>The start of request handling. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classnvidia_1_1inferenceserver_1_1client_1_1InferContext_1_1RequestTimers_1ad3d72a1b49c1e9ebb2bbeb15e04401f8ad793ca80c1d0010ecc2f269b6a4b621a" prot="public">
          <name>REQUEST_END</name>
          <briefdescription>
<para>The end of request handling. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classnvidia_1_1inferenceserver_1_1client_1_1InferContext_1_1RequestTimers_1ad3d72a1b49c1e9ebb2bbeb15e04401f8a4cb619f22003a3f9334144b07c71d1f3" prot="public">
          <name>SEND_START</name>
          <briefdescription>
<para>The start of sending request bytes to the server (i.e. first byte). </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classnvidia_1_1inferenceserver_1_1client_1_1InferContext_1_1RequestTimers_1ad3d72a1b49c1e9ebb2bbeb15e04401f8a8330cc174bf610d2c3afaa2d68e535b2" prot="public">
          <name>SEND_END</name>
          <briefdescription>
<para>The end of sending request bytes to the server (i.e. last byte). </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classnvidia_1_1inferenceserver_1_1client_1_1InferContext_1_1RequestTimers_1ad3d72a1b49c1e9ebb2bbeb15e04401f8aec6eb4b12033d2b794c2a0f3d31c2930" prot="public">
          <name>RECEIVE_START</name>
          <briefdescription>
<para>The start of receiving response bytes from the server (i.e. </para>          </briefdescription>
          <detaileddescription>
<para>first byte). </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="classnvidia_1_1inferenceserver_1_1client_1_1InferContext_1_1RequestTimers_1ad3d72a1b49c1e9ebb2bbeb15e04401f8a66feb30d6ad2348be0c107324aceb3b7" prot="public">
          <name>RECEIVE_END</name>
          <briefdescription>
<para>The end of receiving response bytes from the server (i.e. </para>          </briefdescription>
          <detaileddescription>
<para>last byte). </para>          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>The kind of the timer. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/clients/c++/request.h" line="557" column="1" bodyfile="src/clients/c++/request.h" bodystart="557" bodyend="572"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classnvidia_1_1inferenceserver_1_1client_1_1InferContext_1_1RequestTimers_1aefdc1b3b184cb2c657e337a5e51385ad" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class InferContext</definition>
        <argsstring></argsstring>
        <name>InferContext</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/clients/c++/request.h" line="588" column="1" bodyfile="src/clients/c++/request.h" bodystart="588" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classnvidia_1_1inferenceserver_1_1client_1_1InferContext_1_1RequestTimers_1acd5e48d87588457a5b6f532563a9c151" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class InferHttpContext</definition>
        <argsstring></argsstring>
        <name>InferHttpContext</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/clients/c++/request.h" line="589" column="1" bodyfile="src/clients/c++/request.h" bodystart="589" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classnvidia_1_1inferenceserver_1_1client_1_1InferContext_1_1RequestTimers_1a34c710dfa70d097e53c9cdf91063b4ce" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class InferGrpcContext</definition>
        <argsstring></argsstring>
        <name>InferGrpcContext</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/clients/c++/request.h" line="590" column="1" bodyfile="src/clients/c++/request.h" bodystart="590" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classnvidia_1_1inferenceserver_1_1client_1_1InferContext_1_1RequestTimers_1a1ce142253e14aa918f0d542afe9256a7" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class InferGrpcStreamContext</definition>
        <argsstring></argsstring>
        <name>InferGrpcStreamContext</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/clients/c++/request.h" line="591" column="1" bodyfile="src/clients/c++/request.h" bodystart="591" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classnvidia_1_1inferenceserver_1_1client_1_1InferContext_1_1RequestTimers_1a2415de77985d9351e457fa48b8a5649b" prot="private" static="no" mutable="no">
        <type>struct timespec</type>
        <definition>struct timespec nvidia::inferenceserver::client::InferContext::RequestTimers::request_start_</definition>
        <argsstring></argsstring>
        <name>request_start_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/clients/c++/request.h" line="591" column="1" bodyfile="src/clients/c++/request.h" bodystart="592" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnvidia_1_1inferenceserver_1_1client_1_1InferContext_1_1RequestTimers_1a0474d30586334fdd9f4186e14d1422ea" prot="private" static="no" mutable="no">
        <type>struct timespec</type>
        <definition>struct timespec nvidia::inferenceserver::client::InferContext::RequestTimers::request_end_</definition>
        <argsstring></argsstring>
        <name>request_end_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/clients/c++/request.h" line="591" column="1" bodyfile="src/clients/c++/request.h" bodystart="593" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnvidia_1_1inferenceserver_1_1client_1_1InferContext_1_1RequestTimers_1a9fb12729f1da1e2cc38b5841e8a26b74" prot="private" static="no" mutable="no">
        <type>struct timespec</type>
        <definition>struct timespec nvidia::inferenceserver::client::InferContext::RequestTimers::send_start_</definition>
        <argsstring></argsstring>
        <name>send_start_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/clients/c++/request.h" line="591" column="1" bodyfile="src/clients/c++/request.h" bodystart="594" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnvidia_1_1inferenceserver_1_1client_1_1InferContext_1_1RequestTimers_1aed2c53707e84e73d71d0e7e05a8912ba" prot="private" static="no" mutable="no">
        <type>struct timespec</type>
        <definition>struct timespec nvidia::inferenceserver::client::InferContext::RequestTimers::send_end_</definition>
        <argsstring></argsstring>
        <name>send_end_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/clients/c++/request.h" line="591" column="1" bodyfile="src/clients/c++/request.h" bodystart="595" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnvidia_1_1inferenceserver_1_1client_1_1InferContext_1_1RequestTimers_1af2c12eb724a7070d89e4e53e4d93b656" prot="private" static="no" mutable="no">
        <type>struct timespec</type>
        <definition>struct timespec nvidia::inferenceserver::client::InferContext::RequestTimers::receive_start_</definition>
        <argsstring></argsstring>
        <name>receive_start_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/clients/c++/request.h" line="591" column="1" bodyfile="src/clients/c++/request.h" bodystart="596" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnvidia_1_1inferenceserver_1_1client_1_1InferContext_1_1RequestTimers_1ae070fa23be27b3ec33f54ed3b4a4a666" prot="private" static="no" mutable="no">
        <type>struct timespec</type>
        <definition>struct timespec nvidia::inferenceserver::client::InferContext::RequestTimers::receive_end_</definition>
        <argsstring></argsstring>
        <name>receive_end_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/clients/c++/request.h" line="591" column="1" bodyfile="src/clients/c++/request.h" bodystart="597" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classnvidia_1_1inferenceserver_1_1client_1_1InferContext_1_1RequestTimers_1ac2935983f1de4bd33820357823c36e2f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>nvidia::inferenceserver::client::InferContext::RequestTimers::RequestTimers</definition>
        <argsstring>()</argsstring>
        <name>RequestTimers</name>
        <briefdescription>
<para>Construct a timer with zero-ed timestamps. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/clients/c++/request.h" line="575" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classnvidia_1_1inferenceserver_1_1client_1_1InferContext_1_1RequestTimers_1aa5ace810b5d34b9f6c3a9ae9a3d21dda" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classnvidia_1_1inferenceserver_1_1client_1_1Error" kindref="compound">Error</ref></type>
        <definition>Error nvidia::inferenceserver::client::InferContext::RequestTimers::Reset</definition>
        <argsstring>()</argsstring>
        <name>Reset</name>
        <briefdescription>
<para>Reset all timestamp values to zero. </para>        </briefdescription>
        <detaileddescription>
<para>Must be called before re-using the timer. <simplesect kind="return"><para><ref refid="classnvidia_1_1inferenceserver_1_1client_1_1Error" kindref="compound">Error</ref> object indicating success or failure. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/clients/c++/request.h" line="580" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classnvidia_1_1inferenceserver_1_1client_1_1InferContext_1_1RequestTimers_1ab15f971203dcbd5ed114709318f2232b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classnvidia_1_1inferenceserver_1_1client_1_1Error" kindref="compound">Error</ref></type>
        <definition>Error nvidia::inferenceserver::client::InferContext::RequestTimers::Record</definition>
        <argsstring>(Kind kind)</argsstring>
        <name>Record</name>
        <param>
          <type><ref refid="classnvidia_1_1inferenceserver_1_1client_1_1InferContext_1_1RequestTimers_1ad3d72a1b49c1e9ebb2bbeb15e04401f8" kindref="member">Kind</ref></type>
          <declname>kind</declname>
        </param>
        <briefdescription>
<para>Record the current timestamp for a request stage. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>kind</parametername>
</parameternamelist>
<parameterdescription>
<para>The Kind of the timestamp. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classnvidia_1_1inferenceserver_1_1client_1_1Error" kindref="compound">Error</ref> object indicating success or failure. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/clients/c++/request.h" line="585" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Timer to record the timestamp for different stages of request handling. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/clients/c++/request.h" line="554" column="1" bodyfile="src/clients/c++/request.h" bodystart="554" bodyend="598"/>
    <listofallmembers>
      <member refid="classnvidia_1_1inferenceserver_1_1client_1_1InferContext_1_1RequestTimers_1aefdc1b3b184cb2c657e337a5e51385ad" prot="private" virt="non-virtual"><scope>nvidia::inferenceserver::client::InferContext::RequestTimers</scope><name>InferContext</name></member>
      <member refid="classnvidia_1_1inferenceserver_1_1client_1_1InferContext_1_1RequestTimers_1a34c710dfa70d097e53c9cdf91063b4ce" prot="private" virt="non-virtual"><scope>nvidia::inferenceserver::client::InferContext::RequestTimers</scope><name>InferGrpcContext</name></member>
      <member refid="classnvidia_1_1inferenceserver_1_1client_1_1InferContext_1_1RequestTimers_1a1ce142253e14aa918f0d542afe9256a7" prot="private" virt="non-virtual"><scope>nvidia::inferenceserver::client::InferContext::RequestTimers</scope><name>InferGrpcStreamContext</name></member>
      <member refid="classnvidia_1_1inferenceserver_1_1client_1_1InferContext_1_1RequestTimers_1acd5e48d87588457a5b6f532563a9c151" prot="private" virt="non-virtual"><scope>nvidia::inferenceserver::client::InferContext::RequestTimers</scope><name>InferHttpContext</name></member>
      <member refid="classnvidia_1_1inferenceserver_1_1client_1_1InferContext_1_1RequestTimers_1ad3d72a1b49c1e9ebb2bbeb15e04401f8" prot="public" virt="non-virtual"><scope>nvidia::inferenceserver::client::InferContext::RequestTimers</scope><name>Kind</name></member>
      <member refid="classnvidia_1_1inferenceserver_1_1client_1_1InferContext_1_1RequestTimers_1ad3d72a1b49c1e9ebb2bbeb15e04401f8a66feb30d6ad2348be0c107324aceb3b7" prot="public" virt="non-virtual"><scope>nvidia::inferenceserver::client::InferContext::RequestTimers</scope><name>RECEIVE_END</name></member>
      <member refid="classnvidia_1_1inferenceserver_1_1client_1_1InferContext_1_1RequestTimers_1ae070fa23be27b3ec33f54ed3b4a4a666" prot="private" virt="non-virtual"><scope>nvidia::inferenceserver::client::InferContext::RequestTimers</scope><name>receive_end_</name></member>
      <member refid="classnvidia_1_1inferenceserver_1_1client_1_1InferContext_1_1RequestTimers_1ad3d72a1b49c1e9ebb2bbeb15e04401f8aec6eb4b12033d2b794c2a0f3d31c2930" prot="public" virt="non-virtual"><scope>nvidia::inferenceserver::client::InferContext::RequestTimers</scope><name>RECEIVE_START</name></member>
      <member refid="classnvidia_1_1inferenceserver_1_1client_1_1InferContext_1_1RequestTimers_1af2c12eb724a7070d89e4e53e4d93b656" prot="private" virt="non-virtual"><scope>nvidia::inferenceserver::client::InferContext::RequestTimers</scope><name>receive_start_</name></member>
      <member refid="classnvidia_1_1inferenceserver_1_1client_1_1InferContext_1_1RequestTimers_1ab15f971203dcbd5ed114709318f2232b" prot="public" virt="non-virtual"><scope>nvidia::inferenceserver::client::InferContext::RequestTimers</scope><name>Record</name></member>
      <member refid="classnvidia_1_1inferenceserver_1_1client_1_1InferContext_1_1RequestTimers_1ad3d72a1b49c1e9ebb2bbeb15e04401f8ad793ca80c1d0010ecc2f269b6a4b621a" prot="public" virt="non-virtual"><scope>nvidia::inferenceserver::client::InferContext::RequestTimers</scope><name>REQUEST_END</name></member>
      <member refid="classnvidia_1_1inferenceserver_1_1client_1_1InferContext_1_1RequestTimers_1a0474d30586334fdd9f4186e14d1422ea" prot="private" virt="non-virtual"><scope>nvidia::inferenceserver::client::InferContext::RequestTimers</scope><name>request_end_</name></member>
      <member refid="classnvidia_1_1inferenceserver_1_1client_1_1InferContext_1_1RequestTimers_1ad3d72a1b49c1e9ebb2bbeb15e04401f8a2ca0e66d9f91476f9f00f61c5a834cbb" prot="public" virt="non-virtual"><scope>nvidia::inferenceserver::client::InferContext::RequestTimers</scope><name>REQUEST_START</name></member>
      <member refid="classnvidia_1_1inferenceserver_1_1client_1_1InferContext_1_1RequestTimers_1a2415de77985d9351e457fa48b8a5649b" prot="private" virt="non-virtual"><scope>nvidia::inferenceserver::client::InferContext::RequestTimers</scope><name>request_start_</name></member>
      <member refid="classnvidia_1_1inferenceserver_1_1client_1_1InferContext_1_1RequestTimers_1ac2935983f1de4bd33820357823c36e2f" prot="public" virt="non-virtual"><scope>nvidia::inferenceserver::client::InferContext::RequestTimers</scope><name>RequestTimers</name></member>
      <member refid="classnvidia_1_1inferenceserver_1_1client_1_1InferContext_1_1RequestTimers_1aa5ace810b5d34b9f6c3a9ae9a3d21dda" prot="public" virt="non-virtual"><scope>nvidia::inferenceserver::client::InferContext::RequestTimers</scope><name>Reset</name></member>
      <member refid="classnvidia_1_1inferenceserver_1_1client_1_1InferContext_1_1RequestTimers_1ad3d72a1b49c1e9ebb2bbeb15e04401f8a8330cc174bf610d2c3afaa2d68e535b2" prot="public" virt="non-virtual"><scope>nvidia::inferenceserver::client::InferContext::RequestTimers</scope><name>SEND_END</name></member>
      <member refid="classnvidia_1_1inferenceserver_1_1client_1_1InferContext_1_1RequestTimers_1aed2c53707e84e73d71d0e7e05a8912ba" prot="private" virt="non-virtual"><scope>nvidia::inferenceserver::client::InferContext::RequestTimers</scope><name>send_end_</name></member>
      <member refid="classnvidia_1_1inferenceserver_1_1client_1_1InferContext_1_1RequestTimers_1ad3d72a1b49c1e9ebb2bbeb15e04401f8a4cb619f22003a3f9334144b07c71d1f3" prot="public" virt="non-virtual"><scope>nvidia::inferenceserver::client::InferContext::RequestTimers</scope><name>SEND_START</name></member>
      <member refid="classnvidia_1_1inferenceserver_1_1client_1_1InferContext_1_1RequestTimers_1a9fb12729f1da1e2cc38b5841e8a26b74" prot="private" virt="non-virtual"><scope>nvidia::inferenceserver::client::InferContext::RequestTimers</scope><name>send_start_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
